import {
  CARDANO_NAMESPACE_NAME,
  CARDANO_RPC_METHODS,
  CARDANO_SIGNING_METHODS,
  CARDANO_WALLET_METHODS,
  CardanoWcConnector,
  CHAIN,
  formatAccount,
  getNetworkIdFromChainId
} from '@minswap/wc-wallet';
import {
  formatJsonRpcError,
  formatJsonRpcResult,
  JsonRpcResponse
} from '@walletconnect/jsonrpc-utils';
import { SessionTypes, SignClientTypes } from '@walletconnect/types';
import { getSdkError } from '@walletconnect/utils';

import { CardanoWallet } from '@/cardanoWallet';
import { createCardanoWallet, sleep } from '@/utils';

export async function createCardanoWalletConnector(relayerRegionUrl: string) {
  const connector = await CardanoWcConnector.init({
    projectId: process.env['NEXT_PUBLIC_WC_PROJECT_ID'] ?? '9635b09fa7cd4617a49fcff9bba19952',
    relayerRegionUrl,
    metadata: {
      name: 'Cardano Web3Wallet',
      description: 'Cardano Web3Wallet for WalletConnect',
      url: process.env['NEXT_PUBLIC_URL'] ?? 'https://wallet.minswap.org',
      icons: ['https://avatars.githubusercontent.com/u/37784886']
    }
  });
  return connector;
}

export const onSessionRequest = async (
  requestEvent: SignClientTypes.EventArguments['session_request'],
  wcWallet: CardanoWcConnector | undefined,
  wallet: CardanoWallet | undefined
) => {
  if (!wcWallet || !wallet) return;
  const { params, id, topic } = requestEvent;
  const { request, chainId } = params;

  const sessions = wcWallet.getSessions();
  let response: JsonRpcResponse;

  if (!sessions[requestEvent.topic]) {
    console.warn(`WC2 invalid session topic ${requestEvent.topic}`);
    response = formatJsonRpcError(id, getSdkError('INVALID_EVENT'));
  } else if (chainId !== wallet?.chain) {
    response = formatJsonRpcError(id, getSdkError('UNSUPPORTED_CHAINS'));
  } else if (
    !sessions[topic].namespaces[CARDANO_NAMESPACE_NAME].accounts.some(account =>
      account.includes(wallet.getRewardAddress())
    )
  ) {
    response = formatJsonRpcError(id, getSdkError('UNSUPPORTED_ACCOUNTS'));
  } else {
    switch (request.method) {
      case CARDANO_SIGNING_METHODS.CARDANO_SIGN_TRANSACTION: {
        const tx = request.params[0];
        const signedTx = wallet?.signTx(tx);
        response = formatJsonRpcResult(id, signedTx);
        break;
      }
      case CARDANO_WALLET_METHODS.CARDANO_GET_USED_ADDRESSES:
      case CARDANO_WALLET_METHODS.CARDANO_GET_UNUSED_ADDRESSES: {
        response = formatJsonRpcResult(id, [wallet?.getBaseAddress()]);
        break;
      }
      case CARDANO_WALLET_METHODS.CARDANO_GET_CHANGE_ADDRESSES: {
        response = formatJsonRpcResult(id, wallet?.getBaseAddress());
        break;
      }
      case CARDANO_WALLET_METHODS.CARDANO_GET_COLLATERAL: {
        response = formatJsonRpcResult(id, []);
        break;
      }
      case CARDANO_RPC_METHODS.CARDANO_GET_BALANCE: {
        // dummy value
        response = formatJsonRpcResult(
          id,
          '821b00000002193edd6bb3581c48664e8d76f2b15606677bd117a3eac9929c378ac547ed295518dfd5a14f74426967546f6b656e4e616d65303214581c5126fb3cce467cda73d1b9c1d5a0fc625178ecfd70e600ccb650d724a246313030303331034634303031323401581c52366a9f74840bb47d0509393c18343f376250de1a01e0a43619e471a14f74426967546f6b656e4e616d65303814581c540fc78fe3097c41590b696a23844f8d0c9cf2a46328bb7b77b1c7a6a14f74426967546f6b656e4e616d65303114581c648823ffdad1610b4162f4dbc87bd47f6f9cf45d772ddef661eff198a1447742544318de581c698a6ea0ca99f315034072af31eaac6ec11fe8558d3f48e9775aab9da14574445249501a000f4254581c706e1c53ed984b016f2c0fc79a450fdb572aa21e4e87d6f74d0b6e8aa3466274634144411a0668582346756e694144411a0638443b4873757368694144411a0076d564581c70a4aecf4d124ab32f49c9025c88caa96739c17b5172ccfa0f72834fa1484d696c65436f696e1a00071e12581c777e6b4903dab74963ae581d39875c5dac16c09bb1f511c0af1ddda8a145614141444107581c819de34b4f37b6ae3743e37f16887cacf634a4e61f40d7f0b81e2017a14f74426967546f6b656e4e616d65303914581ca465391790543ecd0f9f769ea24afbfde07007baa782724735e085a8a14f74426967546f6b656e4e616d65303614581ccfc398182e8197a6b39cf2db07a207866074dca9165c3c61c7972f5ea14f74426967546f6b656e4e616d65303514581ccfdff341e1f47450c9f3a347c6d6be2f2029c891a289fc041e8f956ea14f74426967546f6b656e4e616d65303714581cd2e5d6dd927372b34b5da66cc7bee5dffd01351a49ac007efc9cea2da14f74426967546f6b656e4e616d65303414581cd40ebd57f674645d5b1826bbbe3528280463cae8f82982586faa4592a14f74426967546f6b656e4e616d6531300a581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72aa434157531b0000002817f5d936434d494e1b0000000b59e5e10743554e491b00000010250363114443414b451b00000006fc11d2d5444c6577651a000213f3444d494e7419ca1344744254431a007af02a44744554481a6b703f114474534f4c1a00012acd4553555348491b00000007976313cc581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86b758201bc9e38364acda498cc1f2dd732f22a773bf6ce233fc4ff562dc9084775f8b87196c155820221f7bfa40230795c911ceb83644ad21ebb1024fe9a1f8028ba68cd16db988e71a0010154e582029acf586bf10c3b25c488705a542400178f9c9116f123a581d89fa8fb25ed3fb1a0001063458203bb0079303c57812462dec9de8fb867cef8fd3768de7f12c77f6f0dd80381d0d1a0090d6c2582044d75b06a5aafc296e094bf3a450734f739449c62183d4e3bbd50c28522afc971a00025a0e582061f0ddf1dd6e780f512d16bea9eb4fa152f06cdba1a5e6c6215134302b795d2b1a0001ada658207270ef18021f14028cb091bcf2074cc16b4b0f309e3280912cbedc309a24e96e1a00443d3e582076ab7dfda4d70d2721ebf79856d26c585c73f1b7998d50075d2a818891b7772319c35058207c0abb229272d1e1aebdb6f90f879cb7ea31f2e9eb5188b34b6adad73868429e1a00015f86582083ddcadd86addca6341e56c95c45de41dce9f74e7ae1e7cfe72fd0b8b35d75b71a0007dc7b5820994c153ea69b04a1f279a1b9741656f7757bcb018a3c463fdb3ae9dbefbed5c71a0001ada65820b3888d2dd102c8f5001650241e78b954b78bb477f5c75f55051140cde67065351a00329b875820b8490586de2a40ac334d2c50e962c114c18967a5cc524386c2649065d0f20fef1a0001ada65820bfce0e2ae6ff6606bd77f39bb412b604de72b7d5ef4caf345d26963bb31601b41a000515685820c7c72934bbf97291b05cf0e0a5a9cecdf0bf3f781ba97e27e3c34ad42d8841e91a0002991d5820c938d544f2088f6f5ba44d7196cb4f55b762698a719d8f8bd6f9b21ba05f39b31a0001ada65820d1587e72d87a7e2d775a9f952a7b47947dc41dd488a1040765db57cf18e3cee41a0001ada65820e33e9b4651290b484bd69a541512ca195b0582e3b96552f5fcea78803b6370661a002deb4c5820ebd20154a709ce26644175f71bcdbe5b97debf39bd25db5c6a58356159b026631a0032aa645820ef158749393165b26fcaadb91271aa552f701d8323e8336337d7d21ce882519f1a0001ada65820f3a12ddb59ec26c91d1659ddad054bccd58200046a831327b4d99a7d1c82d4cd1950015820f85e30982d5656c8e08f156eab75b4c07cb71ccc24733c8393a13aceb2f1ae7c1a00030d365820f86e870a40ec3cb5f193677ba1aa5c07bf8d3975672557dfcb3a1a2842c1f8411a000db560581ce64e887a5311dccc5a20438415fdbfe4071277a4c2ad6d3d08f13da0a14f74426967546f6b656e4e616d65303314581cf6f49b186751e61f1fb8c64e7504e771f968cea9f4d11f5222b169e3a145744d454c441a05f231b4'
        );
        break;
      }
      case CARDANO_RPC_METHODS.CARDANO_GET_UTXOS: {
        // dummy value
        response = formatJsonRpcResult(id, [
          '82825820567650060708a94a498b0cf14bc425f452eee7e1ebd39fa39f0f7f232a535e5f0182583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a001e8480a1581c70a4aecf4d124ab32f49c9025c88caa96739c17b5172ccfa0f72834fa1484d696c65436f696e190ba9',
          '82825820c7e42344009f88f2d40732bde0eb67d8680034e2289b1338d2d05c32b791fcd00082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d5731a00418d95',
          '82825820c0f1250d824cb6730212fe461dc74accc9342811b644d534e9f9499bde7e87910382583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0011d28aa1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a1434157531b000000113da475a7',
          '828258201e45343ced4ecc6b38fc5248568043a7c9d254cb7cf1a271379402ca3b7a89db0182583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a001e8480a1581c70a4aecf4d124ab32f49c9025c88caa96739c17b5172ccfa0f72834fa1484d696c65436f696e190ba9',
          '828258204fe11a71cef7166c1147ebe5078c1d319b2bb5089426e48dbd1a998b123d96990282583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a00477caaaf581c48664e8d76f2b15606677bd117a3eac9929c378ac547ed295518dfd5a14f74426967546f6b656e4e616d65303214581c5126fb3cce467cda73d1b9c1d5a0fc625178ecfd70e600ccb650d724a14634303031323401581c52366a9f74840bb47d0509393c18343f376250de1a01e0a43619e471a14f74426967546f6b656e4e616d65303814581c540fc78fe3097c41590b696a23844f8d0c9cf2a46328bb7b77b1c7a6a14f74426967546f6b656e4e616d65303114581c648823ffdad1610b4162f4dbc87bd47f6f9cf45d772ddef661eff198a1447742544318de581c698a6ea0ca99f315034072af31eaac6ec11fe8558d3f48e9775aab9da14574445249501a000f4254581c706e1c53ed984b016f2c0fc79a450fdb572aa21e4e87d6f74d0b6e8aa2466274634144411a066858234873757368694144411a0005db5a581c70a4aecf4d124ab32f49c9025c88caa96739c17b5172ccfa0f72834fa1484d696c65436f696e1a000706c0581c777e6b4903dab74963ae581d39875c5dac16c09bb1f511c0af1ddda8a145614141444107581c819de34b4f37b6ae3743e37f16887cacf634a4e61f40d7f0b81e2017a14f74426967546f6b656e4e616d65303914581ca465391790543ecd0f9f769ea24afbfde07007baa782724735e085a8a14f74426967546f6b656e4e616d65303614581ccfc398182e8197a6b39cf2db07a207866074dca9165c3c61c7972f5ea14f74426967546f6b656e4e616d65303514581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a1444d494e7419ca13581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86a55820bfce0e2ae6ff6606bd77f39bb412b604de72b7d5ef4caf345d26963bb31601b41a000515685820c7c72934bbf97291b05cf0e0a5a9cecdf0bf3f781ba97e27e3c34ad42d8841e91a00022f145820c938d544f2088f6f5ba44d7196cb4f55b762698a719d8f8bd6f9b21ba05f39b31a0001ada65820d1587e72d87a7e2d775a9f952a7b47947dc41dd488a1040765db57cf18e3cee41a0001ada65820f85e30982d5656c8e08f156eab75b4c07cb71ccc24733c8393a13aceb2f1ae7c1a00030d36581ce64e887a5311dccc5a20438415fdbfe4071277a4c2ad6d3d08f13da0a14f74426967546f6b656e4e616d65303314',
          '82825820e085f257c1c25e4dd6ef26d824b65fd231eabbdb6ea8a8058ec517a5c066727a0382583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a002017f0a1581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86a65820221f7bfa40230795c911ceb83644ad21ebb1024fe9a1f8028ba68cd16db988e71a0010154e58207270ef18021f14028cb091bcf2074cc16b4b0f309e3280912cbedc309a24e96e1a00443d3e582076ab7dfda4d70d2721ebf79856d26c585c73f1b7998d50075d2a818891b7772319c3505820ebd20154a709ce26644175f71bcdbe5b97debf39bd25db5c6a58356159b026631a0032aa645820ef158749393165b26fcaadb91271aa552f701d8323e8336337d7d21ce882519f1a0001ada65820f3a12ddb59ec26c91d1659ddad054bccd58200046a831327b4d99a7d1c82d4cd195001',
          '8282582082d0663818f84220a6deac898e118d15b4bfcc871b18075f3f8879eff6c1c0d60282583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0011e360a1581c706e1c53ed984b016f2c0fc79a450fdb572aa21e4e87d6f74d0b6e8aa14873757368694144411a0070fa0a',
          '82825820f8e320217de1bed8469aac943fe7ee31c71c6d5906c23455ce1310b893f1f52e0082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d5731a003e7fd6',
          '82825820e47a0a3dbfeb48f753aed37bdfd0297457465b465ea61e0b07eb4d41cb27f7b60182583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d5731a057a3da9',
          '82825820e47a0a3dbfeb48f753aed37bdfd0297457465b465ea61e0b07eb4d41cb27f7b60382583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0013991ca1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a3434157531b0000001150c6a89043554e491b00000002ef5afc6e4443414b451b00000005deb5f9b9',
          '82825820d8315697e84709d41a62aed4227e64399a12a428100ef560f4b29696bb7ce9c10182583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a001e8480a1581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86a15820c7c72934bbf97291b05cf0e0a5a9cecdf0bf3f781ba97e27e3c34ad42d8841e9196a09',
          '82825820cc3c83f61401bc427d33b00bfdf9793593368f6236babf9793573a1cdb24ea470082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a00153e02a2581ccfdff341e1f47450c9f3a347c6d6be2f2029c891a289fc041e8f956ea14f74426967546f6b656e4e616d65303701581cd40ebd57f674645d5b1826bbbe3528280463cae8f82982586faa4592a14f74426967546f6b656e4e616d65313001',
          '8282582010051c58a0709f77de4276ff2da5b508f9e79da1653ad99c6bba245b422c4ed30182583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d5731a04c85f70',
          '8282582022dc2bcf45b05c256ab78e6dab53285baa9afb1532b45a12442e10076a2e2dbf0182583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a001e8480a1581cf6f49b186751e61f1fb8c64e7504e771f968cea9f4d11f5222b169e3a145744d454c441a05f231b4',
          '82825820222fe38c685fb0c9130178c6b76c77f077756c1fc7d3af519644e219262c3d7f0082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0077e95ba1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a2434157531b000000015957886c434d494e1a09e972f2',
          '8282582035641be566fced337a0da7b3167d4dfbf8115e9018785ffc5999f178b03180170282583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a003edf28a7581c5126fb3cce467cda73d1b9c1d5a0fc625178ecfd70e600ccb650d724a14631303030333103581c706e1c53ed984b016f2c0fc79a450fdb572aa21e4e87d6f74d0b6e8aa146756e694144411a0638443b581ccfdff341e1f47450c9f3a347c6d6be2f2029c891a289fc041e8f956ea14f74426967546f6b656e4e616d65303713581cd2e5d6dd927372b34b5da66cc7bee5dffd01351a49ac007efc9cea2da14f74426967546f6b656e4e616d65303414581cd40ebd57f674645d5b1826bbbe3528280463cae8f82982586faa4592a14f74426967546f6b656e4e616d65313009581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a5434d494e1b0000000b3fe1c25b444c6577651a000213f344744254431a00017fec44744554481a5d5db0804474534f4c1a00012acd581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86aa58201bc9e38364acda498cc1f2dd732f22a773bf6ce233fc4ff562dc9084775f8b87196c15582029acf586bf10c3b25c488705a542400178f9c9116f123a581d89fa8fb25ed3fb1a0001063458203bb0079303c57812462dec9de8fb867cef8fd3768de7f12c77f6f0dd80381d0d1a0090d6c2582061f0ddf1dd6e780f512d16bea9eb4fa152f06cdba1a5e6c6215134302b795d2b1a0001ada658207c0abb229272d1e1aebdb6f90f879cb7ea31f2e9eb5188b34b6adad73868429e1a00015f86582083ddcadd86addca6341e56c95c45de41dce9f74e7ae1e7cfe72fd0b8b35d75b71a0007dc7b5820994c153ea69b04a1f279a1b9741656f7757bcb018a3c463fdb3ae9dbefbed5c71a0001ada65820b3888d2dd102c8f5001650241e78b954b78bb477f5c75f55051140cde67065351a00329b875820b8490586de2a40ac334d2c50e962c114c18967a5cc524386c2649065d0f20fef1a0001ada65820e33e9b4651290b484bd69a541512ca195b0582e3b96552f5fcea78803b6370661a002deb4c',
          '8282582035641be566fced337a0da7b3167d4dfbf8115e9018785ffc5999f178b03180170382583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0012cf14a1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a243554e491b0000000ca6fa7a2a4553555348491b00000007976313cc',
          '82825820e116000ca51a751cf80f545d135d03083faa7100dbbb8e3a40a186fae29ba6310282583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a00138846a1581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86a15820f86e870a40ec3cb5f193677ba1aa5c07bf8d3975672557dfcb3a1a2842c1f8411a000db560',
          '828258206749a57f25d85fe52f84d8cc83a7bc381c1d26614f967af9588c0cdf00ab5c360082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a00117edea1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a1447442544319f082',
          '8282582014c430c046280178c274a02dd611a157f1bfc6512644285e9eb803c0136951040082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0011a5e9a1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a144744254431a000aefbd',
          '8282582054c4b47cfb4f1b27a2c743c6ab8c065f0f86db75fa27c6cdf6a5eac62b47319f0382583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a00138846a1581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86a1582044d75b06a5aafc296e094bf3a450734f739449c62183d4e3bbd50c28522afc971a00016f5c',
          '828258200297fdebfe7c4e27a6d9d6205dd2ff84d326bc6bd5ca6dd6223260eb8f4c1d3a0082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0011af73a1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a144744254431a001cac60',
          '8282582050a098f7af8fa08f19d25df5d3a7fc13d0aeb7ce4b001a6a41840851093e59810082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0161df2ea1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a5434157531b0000000430333293434d494e1a101aabba43554e491a8eadec794443414b451b000000011d5bd91c44744554481a0e128e91',
          '8282582022f14fb803524353faba086044dafddfed89ce29f946345c88b1d4fa9bd30c900282583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d5731b000000020aa17198',
          '8282582022f14fb803524353faba086044dafddfed89ce29f946345c88b1d4fa9bd30c900382583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0013669aa1581ce4214b7cce62ac6fbba385d164df48e157eae5863521b4b67ca71d86a1582044d75b06a5aafc296e094bf3a450734f739449c62183d4e3bbd50c28522afc9719eab2',
          '82825820ff617e812a2d413c0552a37197ac3fa828a5d060000b06bfc51e70ae24399d8f0082583900899929079bd48c71378ffee70e7846cb9ecb61d2ca7b452beeaa814a2652206e54d77f0d74d7c60bc85da42e16b5ff6651e060842d46d573821a0011cb88a1581ce16c2dc8ae937e8d3790c7fd7168d7b994621ba14ca11415f39fed72a144744254431a0050e39f'
        ]);
        break;
      }
      case CARDANO_WALLET_METHODS.CARDANO_GET_NETWORK_ID: {
        response = formatJsonRpcResult(id, getNetworkIdFromChainId(wallet.chain));
        break;
      }
      default:
        // TODO: Error response not propagated to dApp
        // Search for: Error code is not in server code range
        response = formatJsonRpcError(id, getSdkError('INVALID_METHOD'));
    }
  }
  await wcWallet.web3wallet.respondSessionRequest({
    topic,
    response
  });
};

export const onSessionProposal = async (
  proposal: SignClientTypes.EventArguments['session_proposal'],
  wcWallet: CardanoWcConnector | undefined,
  wallet: CardanoWallet | undefined,
  account: number
) => {
  if (!wcWallet || !wallet) return;
  const { params } = proposal;
  const { requiredNamespaces, optionalNamespaces } = params;

  const namespaces: SessionTypes.Namespaces = {};
  const accounts: string[] = [];
  let requiresChainUpdate = false;
  const namespaceNames = Object.keys(requiredNamespaces);
  // If any other namespace other than cardano request then reject
  if (namespaceNames.some(namespaceName => namespaceName !== CARDANO_NAMESPACE_NAME)) {
    // TODO: Add support for multiple namespace
    await wcWallet.rejectSessionProposal(proposal, getSdkError('UNSUPPORTED_NAMESPACE_KEY'));
    return;
  }
  // If any unsupported chain in cardano namespace then reject
  if (
    requiredNamespaces[CARDANO_NAMESPACE_NAME].chains?.some(
      chain => !Object.values(CHAIN).includes(chain as CHAIN)
    )
  ) {
    // TODO: Add support for multiple namespace
    await wcWallet.rejectSessionProposal(proposal, getSdkError('UNSUPPORTED_CHAINS'));
    return;
  }
  for (const namespaceName of namespaceNames) {
    const chains = requiredNamespaces[namespaceName].chains as CHAIN[];
    if (chains)
      for (const chain of chains) {
        const chainInOptionalChains =
          optionalNamespaces?.[CARDANO_NAMESPACE_NAME]?.chains?.includes(chain);
        if (!chainInOptionalChains) {
          await wcWallet.rejectSessionProposal(proposal, {
            code: 1,
            message: `${chain} not in optional namespaces`
          });
          return;
        }
        const wallet = await createCardanoWallet(chain, account); // derive wallet or can fetch from a store
        const rewardAddress = wallet.getRewardAddress();
        const baseAddress = wallet.getBaseAddress();
        accounts.push(formatAccount(chain, rewardAddress, baseAddress));
      }
    // deprecated, all chains required should be passed in initial proposal
    if (
      !chains.includes(wallet.chain) &&
      optionalNamespaces?.[CARDANO_NAMESPACE_NAME]?.chains?.includes(wallet.chain)
    ) {
      // when chain is not in list of required chains, add it to list of chains
      requiresChainUpdate = true;
      chains.push(wallet.chain);
      const rewardAddress = wallet.getRewardAddress();
      const baseAddress = wallet.getBaseAddress();
      accounts.push(formatAccount(wallet.chain, rewardAddress, baseAddress));
    }
    namespaces[namespaceName] = {
      accounts,
      methods: requiredNamespaces[namespaceName].methods,
      events: requiredNamespaces[namespaceName].events,
      chains: chains
    };
  }

  await wcWallet?.approveSessionProposal(proposal, namespaces);
  if (requiresChainUpdate) {
    // Hack: Additional delay to give time for session to be established before we emit chain change
    // UNSAFE: bc session might not be established in 5s
    await sleep(5000);
    await onChainChange(wallet.chain, wcWallet, wallet);
  }
};

export const onAccountChange = async (
  chain: CHAIN,
  wcWallet: CardanoWcConnector | undefined,
  wallet: CardanoWallet | undefined
) => {
  if (!wcWallet || !wallet) return;
  await wcWallet.emitAccountChanged(chain, wallet.getRewardAddress(), wallet.getBaseAddress());
};

export const onChainChange = async (
  currentChain: CHAIN,
  wcWallet: CardanoWcConnector | undefined,
  wallet: CardanoWallet | undefined
) => {
  if (!wcWallet || !wallet) return;
  await wcWallet.emitNetworkChanged(
    currentChain,
    wallet.getRewardAddress(),
    wallet.getBaseAddress()
  );
};
